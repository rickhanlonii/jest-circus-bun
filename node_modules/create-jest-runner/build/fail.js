"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = fail;
var _toTestResult = _interopRequireDefault(require("./toTestResult"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function fail({
  start,
  end,
  test,
  errorMessage
}) {
  // TODO: Currently the `fail` function allows 2 ways to pass an error message.
  // Both methods are currently in used by downstream packages.
  // The current behavior is to favour `errorMessage` over `test.errorMessage`.
  const actualErrorMessage = errorMessage || test.errorMessage;
  return (0, _toTestResult.default)({
    errorMessage: actualErrorMessage,
    stats: {
      failures: 1,
      pending: 0,
      passes: 0,
      todo: 0,
      start,
      end
    },
    skipped: false,
    tests: [{
      duration: end - start,
      ...test,
      errorMessage: actualErrorMessage
    }],
    jestTestPath: test.path
  });
}